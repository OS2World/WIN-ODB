
#include "d:\users\staffan\odb\source\scanner.h"
#include <stdio.h>
#include <string.h>
#include <iostream.h>
#include <stdlib.h>

int scanner::openFile(char *fnm){
   fileName=strdup(fnm);
	inputfile=fopen(fileName,"r");
   if (inputfile!=NULL) state=OPEN;

   return state;
}

int scanner::whiteChar(char ch){
	if ((ch<' ')||(ch>'~')) return 1;
   else return 0;
}

int scanner::delimitingChar(char ch){
int i=0;
	while (i<NOF_DELIMITERS)
   	if (delimiters[i++]==ch) return 1;

   return 0;
}

int scanner::getNextToken(void){
int i=0;
int token;

	if (state!=OPEN) return ERRORTOKEN;

   if (delimitingChar(inpbuf[0])){
   	token=mapStringToToken(inpbuf);
      memset(inpbuf,'\0',256);
      return token;
   }

   fscanf(inputfile,"%c",&currentCh);

   while(whiteChar(currentCh)) fscanf(inputfile,"%c",&currentCh);

   inpbuf[i++]=currentCh;
   while(!whiteChar(currentCh)&&!delimitingChar(currentCh)){
      fscanf(inputfile,"%c",&currentCh);
      inpbuf[i++]=currentCh;
   }

   token=mapStringToToken(inpbuf);
   memset(inpbuf,'\0',256);

   if (delimitingChar(currentCh)) inpbuf[0]=currentCh;

   return token;
}

int scanner::mapStringToToken(char *str){
int i=0;
	while ((strcmp(str,keyWord[i])!=0)&&(i<=NOF_KEYWORDS)) i++;

   if ((i>NOF_KEYWORDS)&&(strlen(str)>0)) return NAMETOKEN;
   else return i;
}
scanner::~scanner(void){
   if (fileName!=NULL) free(fileName);
}

scanner::scanner(void){
	keyWord[0]=NULL;
   keyWord[1]=NULL;
   keyWord[2]=CREATESTRG;
   keyWord[3]=DATABASESTRG;
   keyWord[4]=TABLESTRG;
   keyWord[5]=SIZESTRG;
   keyWord[6]=EQUALSTRG;
   keyWord[7]=SCOLONSTRG;
   keyWord[8]=NULL;
   keyWord[9]=NULL;
   keyWord[10]=LOADSTRG;
   keyWord[11]=SAVESTRG;
   keyWord[12]=FROMSTRG;
   keyWord[13]=ASSTRG;
   keyWord[14]=TYPESTRG;
   keyWord[15]=SUBTYPESTRG;
   keyWord[16]=OFSTRG;
   keyWord[17]=PROPERTIESSTRG;
   keyWord[18]=ARROWSTRG;
   keyWord[19]=ONSTRG;
   keyWord[20]=INSTANCESTRG;
   keyWord[21]=SETSTRG;
   keyWord[22]=INDEXSTRG;
   keyWord[23]=DCOLONSTRG;


   memset(delimiters,'\0',NOF_DELIMITERS);
   delimiters[0]='!';
   delimiters[1]='"';
   delimiters[2]='+';
   delimiters[3]='-';
   delimiters[4]='*';
   delimiters[5]='/';
   delimiters[6]='<';
   delimiters[7]='>';
   delimiters[8]='=';
   delimiters[9]='(';
   delimiters[10]=')';
   delimiters[11]='[';
   delimiters[12]=']';
   delimiters[13]='{';
   delimiters[14]='}';

   state=CLOSED;

   currentCh='\0';

   memset(inpbuf,'\0',256);

   fileName=NULL;

}

int main(void){
scanner sc;
int token;

	sc.openFile("test.ocr");

   while ((token=sc.getNextToken())!=ERRORTOKEN){
   	cout<<sc.tokenToStr(token)<<'\0';
   }

}
