LIBRARY     ODB.DLL

DESCRIPTION 'ODB Object Database DLL Resource'

EXPORTS
    @database@generate_oid$qv      @1   ; database::generate_oid()
    @database@get_tablesize$qv     @2   ; database::get_tablesize()
    @database@get_dbname$qv        @3   ; database::get_dbname()
    @database@get_usertypes$qv     @4   ; database::get_usertypes()
    @database@create_type$qpc      @5   ; database::create_type(char*)
    @database@create_type$qpct1    @6   ; database::create_type(char*,char*)
    @database@display$qr12outputbuffer @7   ; database::display(outputbuffer&)
    @database@save_database$qpc    @8   ; database::save_database(char*)
    @database@load_database$qpc    @9   ; database::load_database(char*)
    @database@gettypenamed$qpc     @10  ; database::gettypenamed(char*)
    @database@$bctr$qpc            @11  ; database::database(char*)
    @database@$bctr$qv             @12  ; database::database()
    @database@initialize$qv        @13  ; database::initialize()
    @database@getstring$qpc        @14  ; database::getstring(char*)
    @database@open_stream$qpc      @15  ; database::open_stream(char*)
    @database@open_stream$qpct1t1l @16  ; database::open_stream(char*,char*,char*,long)
    @database@open_stream$qpct1t1f @17  ; database::open_stream(char*,char*,char*,float)
    @database@open_stream$qpct1t1  @18  ; database::open_stream(char*,char*,char*)
    @database@open_stream$qpct1p6object @19  ; database::open_stream(char*,char*,object*)
    @database@select$qp12query_streampct2l @20  ; database::select(query_stream*,char*,char*,long)
    @database@select$qp12query_streampct2f @21  ; database::select(query_stream*,char*,char*,float)
    @database@select$qp12query_streampct2 @22  ; database::select(query_stream*,char*,char*)
    @database@select$qp12query_streampcp6object @23  ; database::select(query_stream*,char*,object*)
    @database@semi_join$qp12query_streampct1t2 @24  ; database::semi_join(query_stream*,char*,query_stream*,char*)
    @database@get$qp12query_stream @25  ; database::get(query_stream*)
    @database@close_stream$qp12query_stream @26  ; database::close_stream(query_stream*)
    @database@reset_stream$qp12query_stream @27  ; database::reset_stream(query_stream*)
    @database@getallsubtypes$qv    @28  ; database::getallsubtypes()
    @database@getnextsubtype$qv    @29  ; database::getnextsubtype()
    @database@getsubtypes$qpc      @30  ; database::getsubtypes(char*)
    @database@getsubtype$qpc       @31  ; database::getsubtype(char*)
    @database@getfirstprop$qpc     @32  ; database::getfirstprop(char*)
    @database@getnextprop$qpc      @33  ; database::getnextprop(char*)
    @database@getsupertype$qpc     @34  ; database::getsupertype(char*)
    @database@getpropertytype$qpct1 @35  ; database::getpropertytype(char*,char*)
    @database@add_property$qpct1i  @36  ; database::add_property(char*,char*,int)
    @database@getobjectwithoid$qpcl @37  ; database::getobjectwithoid(char*,long)
    @database@create_instance$qpc  @38  ; database::create_instance(char*)
    @database@set_name$qpc         @39  ; database::set_name(char*)
    @database@set_tablesize$qi     @40  ; database::set_tablesize(int)
    @database@create_index$qpct1   @41  ; database::create_index(char*,char*)
    @database@drop_index$qpct1     @42  ; database::drop_index(char*,char*)
    @database@delete_property$qpct1 @43  ; database::delete_property(char*,char*)
    @database@delete_type$qpc      @44  ; database::delete_type(char*)
    @database@delete_object$qp6object @45  ; database::delete_object(object*)
    @database@setproperty_value$qp6objectpcl @46  ; database::setproperty_value(object*,char*,long)
    @database@setproperty_value$qp6objectpcf @47  ; database::setproperty_value(object*,char*,float)
    @database@setproperty_value$qp6objectpct2 @48  ; database::setproperty_value(object*,char*,char*)
    @database@setproperty_value$qp6objectpct1 @49  ; database::setproperty_value(object*,char*,object*)
    @database@setproperty_value$qp6objectpcp10collection @50  ; database::setproperty_value(object*,char*,collection*)
    @database@getproperty_value$qp6objectpcpl @51  ; database::getproperty_value(object*,char*,long*)
    @database@getproperty_value$qp6objectpcpf @52  ; database::getproperty_value(object*,char*,float*)
    @database@getproperty_value$qp6objectpcpp6object @53  ; database::getproperty_value(object*,char*,object**)
    @database@getproperty_value$qp6objectpcppc @54  ; database::getproperty_value(object*,char*,char**)
    @database@getproperty_value$qp6objectpcpp10collection @55  ; database::getproperty_value(object*,char*,collection**)
    @database@create_collection$qi @56  ; database::create_collection(int)
    @database@collection_insert$qp10collectionl @57  ; database::collection_insert(collection*,long)
    @database@collection_insert$qp10collectionf @58  ; database::collection_insert(collection*,float)
    @database@collection_insert$qp10collectiont1 @59  ; database::collection_insert(collection*,collection*)
    @database@collection_insert$qp10collectionpc @60  ; database::collection_insert(collection*,char*)
    @database@collection_insert$qp10collectionp6object @61  ; database::collection_insert(collection*,object*)
    @database@delelete_collection$qp10collection @62  ; database::delelete_collection(collection*)
    @database@$brsh$qpc            @63  ; database::operator >>(char*)
    @database@$blsh$qpc            @64  ; database::operator <<(char*)
    @database@validate$qpcrl       @65  ; database::validate(char*,long&)
    @database@validate$qpcrf       @66  ; database::validate(char*,float&)
    @database@validate$qpc         @67  ; database::validate(char*)
    @database@validate$qpcp10collection @68  ; database::validate(char*,collection*)
    @object@oid$qv                 @69  ; object::oid()
    @object@display$qr12outputbuffer @70  ; object::display(outputbuffer&)
    @object@displayoid$qr12outputbuffer @71  ; object::displayoid(outputbuffer&)
    @object@$bctr$qv               @72  ; object::object()
    @object@$bctr$qp4typep8database @73  ; object::object(type*,database*)
    @object@getoid$qv              @74  ; object::getoid()
    @object@add_newproperty$qipc   @75  ; object::add_newproperty(int,char*)
    @object@putprop$qp14property_value @76  ; object::putprop(property_value*)
    @object@setproperty_value$qpcl @77  ; object::setproperty_value(char*,long)
    @object@setproperty_value$qpcf @78  ; object::setproperty_value(char*,float)
    @object@setproperty_value$qpct1 @79  ; object::setproperty_value(char*,char*)
    @object@setproperty_value$qpcp6object @80  ; object::setproperty_value(char*,object*)
    @object@setproperty_value$qpcp10collection @81  ; object::setproperty_value(char*,collection*)
    @object@getpropertynamed$qpc   @82  ; object::getpropertynamed(char*)
    @object@deleteobject$qv        @83  ; object::deleteobject()
    @object@$bdtr$qv               @84  ; object::~object()
    @object@saveobject$qp8ofstreami @85  ; object::saveobject(ofstream*,int)
    @object@delete_instanceproperty$qpc @86  ; object::delete_instanceproperty(char*)
    @collection@displayelements$qr12outputbuffer @87  ; collection::displayelements(outputbuffer&)
    @collection@$bctr$qi           @88  ; collection::collection(int)
    @collection@$bctr$qv           @89  ; collection::collection()
    @collection@is_empty$qv        @90  ; collection::is_empty()
    @collection@insert$qp6object   @91  ; collection::insert(object*)
    @collection@insert$qpc         @92  ; collection::insert(char*)
    @collection@insert$qp10collection @93  ; collection::insert(collection*)
    @collection@insert$ql          @94  ; collection::insert(long)
    @collection@insert$qf          @95  ; collection::insert(float)
    @collection@delete_element$qp6object @96  ; collection::delete_element(object*)
    @collection@delete_element$ql  @97  ; collection::delete_element(long)
    @collection@delete_element$qf  @98  ; collection::delete_element(float)
    @collection@delete_element$qpc @99  ; collection::delete_element(char*)
    @collection@delete_set$qv      @100 ; collection::delete_set()
    @collection@null_reference_to$qp6object @101 ; collection::null_reference_to(object*)
    @collection@gettype$qv         @102 ; collection::gettype()
    @collection@getintval$qv       @103 ; collection::getintval()
    @collection@getcharstringval$qv @104 ; collection::getcharstringval()
    @collection@getrealval$qv      @105 ; collection::getrealval()
    @collection@getobj$qv          @106 ; collection::getobj()
    @collection@getsetval$qv       @107 ; collection::getsetval()
    @collection@getnext$qv         @108 ; collection::getnext()
    @collection@set_next_to$qp10collection @109 ; collection::set_next_to(collection*)
    @collection@display$qr12outputbuffer @110 ; collection::display(outputbuffer&)
    @collection@member$ql          @111 ; collection::member(long)
    @collection@member$qpc         @112 ; collection::member(char*)
    @collection@member$qf          @113 ; collection::member(float)
    @collection@member$qp6object   @114 ; collection::member(object*)
    @collection@equal$qp10collection @115 ; collection::equal(collection*)
    @collection@saveset$qp8ofstream @116 ; collection::saveset(ofstream*)
    @collection@populatefromfile$qp8ifstreamip8tblentryp8database @117 ; collection::populatefromfile(ifstream*,int,tblentry*,database*)
    @outputbuffer@$bctr$qv         @118 ; outputbuffer::outputbuffer()
    @outputbuffer@write_request$qi @119 ; outputbuffer::write_request(int)
    @outputbuffer@get_buffer$qv    @120 ; outputbuffer::get_buffer()
    @outputbuffer@reset_buffer$qv  @121 ; outputbuffer::reset_buffer()
    @query_stream@eval_op$qpcll    @122 ; query_stream::eval_op(char*,long,long)
    @query_stream@eval_op$qpcff    @123 ; query_stream::eval_op(char*,float,float)
    @query_stream@eval$qp10collectionl @124 ; query_stream::eval(collection*,long)
    @query_stream@eval$qp10collectionf @125 ; query_stream::eval(collection*,float)
    @query_stream@eval$qp10collectionpc @126 ; query_stream::eval(collection*,char*)
    @query_stream@eval$qp10collectionp6object @127 ; query_stream::eval(collection*,object*)
    @query_stream@eval$qp10collectiont1 @128 ; query_stream::eval(collection*,collection*)
    @query_stream@evalsetexpr$qp10collection @129 ; query_stream::evalsetexpr(collection*)
    @query_stream@getint$ql        @130 ; query_stream::getint(long)
    @query_stream@getreal$qf       @131 ; query_stream::getreal(float)
    @query_stream@getcharstring$qpc @132 ; query_stream::getcharstring(char*)
    @query_stream@getobj$qp6object @133 ; query_stream::getobj(object*)
    @query_stream@getset$qv        @134 ; query_stream::getset()
    @query_stream@move_to_next_extent$qlp4type @135 ; query_stream::move_to_next_extent(long,type*)
    @query_stream@move_to_next_extent$qfp4type @136 ; query_stream::move_to_next_extent(float,type*)
    @query_stream@move_to_next_extent$qpcp4type @137 ; query_stream::move_to_next_extent(char*,type*)
    @query_stream@move_to_next_extent$qp6objectp4type @138 ; query_stream::move_to_next_extent(object*,type*)
    @query_stream@move_to_next_extent$qp10collectionp4type @139 ; query_stream::move_to_next_extent(collection*,type*)
    @query_stream@move_to_next_extent$qp4type @140 ; query_stream::move_to_next_extent(type*)
    @query_stream@$bctr$qv         @141 ; query_stream::query_stream()
    @query_stream@set_operator$qpc @142 ; query_stream::set_operator(char*)
    @query_stream@set_currbuck$qi  @143 ; query_stream::set_currbuck(int)
    @query_stream@set_currlst$qp11linked_list @144 ; query_stream::set_currlst(linked_list*)
    @query_stream@set_scantype$qi  @145 ; query_stream::set_scantype(int)
    @query_stream@set_currobj$qp6object @146 ; query_stream::set_currobj(object*)
    @query_stream@set_currtype$qp4type @147 ; query_stream::set_currtype(type*)
    @query_stream@set_table$qp5table @148 ; query_stream::set_table(table*)
    @query_stream@set_extentstart$qp7typestp @149 ; query_stream::set_extentstart(typestp*)
    @query_stream@set_extentend$qp7typestp @150 ; query_stream::set_extentend(typestp*)
    @query_stream@set_datatype$qi  @151 ; query_stream::set_datatype(int)
    @query_stream@set_prop$qpc     @152 ; query_stream::set_prop(char*)
    @query_stream@set_intval$ql    @153 ; query_stream::set_intval(long)
    @query_stream@set_realval$qf   @154 ; query_stream::set_realval(float)
    @query_stream@set_charstringval$qpc @155 ; query_stream::set_charstringval(char*)
    @query_stream@set_objval$qp6object @156 ; query_stream::set_objval(object*)
    @query_stream@set_setval$qp10collection @157 ; query_stream::set_setval(collection*)
    @query_stream@get_operator$qv  @158 ; query_stream::get_operator()
    @query_stream@get_currbuck$qv  @159 ; query_stream::get_currbuck()
    @query_stream@get_currlst$qv   @160 ; query_stream::get_currlst()
    @query_stream@get_scantype$qv  @161 ; query_stream::get_scantype()
    @query_stream@get_currobj$qv   @162 ; query_stream::get_currobj()
    @query_stream@get_currtype$qv  @163 ; query_stream::get_currtype()
    @query_stream@get_table$qv     @164 ; query_stream::get_table()
    @query_stream@get_prop$qv      @165 ; query_stream::get_prop()
    @query_stream@get_intval$qv    @166 ; query_stream::get_intval()
    @query_stream@get_realval$qv   @167 ; query_stream::get_realval()
    @query_stream@get_charstringval$qv @168 ; query_stream::get_charstringval()
    @query_stream@get_objval$qv    @169 ; query_stream::get_objval()
    @query_stream@get_setval$qv    @170 ; query_stream::get_setval()
    @query_stream@get_datatype$qv  @171 ; query_stream::get_datatype()
    @query_stream@get$qv           @172 ; query_stream::get()
    @query_stream@close$qv         @173 ; query_stream::close()
    @query_stream@reset$qv         @174 ; query_stream::reset()
    @query_stream@open_select_stream$qpct1l @175 ; query_stream::open_select_stream(char*,char*,long)
    @query_stream@open_select_stream$qpct1f @176 ; query_stream::open_select_stream(char*,char*,float)
    @query_stream@open_select_stream$qpct1 @177 ; query_stream::open_select_stream(char*,char*)
    @query_stream@open_select_stream$qpcp6object @178 ; query_stream::open_select_stream(char*,object*)
    @query_stream@open_select_stream$qpcp10collection @179 ; query_stream::open_select_stream(char*,collection*)
    @query_stream@open_sj_stream$qpcp12query_streamt1 @180 ; query_stream::open_sj_stream(char*,query_stream*,char*)
    @query_stream@display$qr12outputbuffer @181 ; query_stream::display(outputbuffer&)
    @semi_join_stream@getint$qv    @182 ; semi_join_stream::getint()
    @semi_join_stream@getreal$qv   @183 ; semi_join_stream::getreal()
    @semi_join_stream@getcharstring$qv @184 ; semi_join_stream::getcharstring()
    @semi_join_stream@getobj$qv    @185 ; semi_join_stream::getobj()
    @semi_join_stream@getobjspecial$qv @186 ; semi_join_stream::getobjspecial()
    @semi_join_stream@set_rprop$qpc @187 ; semi_join_stream::set_rprop(char*)
    @semi_join_stream@get_rprop$qv @188 ; semi_join_stream::get_rprop()
    @semi_join_stream@$bctr$qv     @189 ; semi_join_stream::semi_join_stream()
    @semi_join_stream@$bctr$qp12query_streampct1t2 @190 ; semi_join_stream::semi_join_stream(query_stream*,char*,query_stream*,char*)
    @semi_join_stream@get$qv       @191 ; semi_join_stream::get()
    @semi_join_stream@close$qv     @192 ; semi_join_stream::close()
    @semi_join_stream@reset$qv     @193 ; semi_join_stream::reset()
    @select_stream@getint$qv       @194 ; select_stream::getint()
    @select_stream@getreal$qv      @195 ; select_stream::getreal()
    @select_stream@getcharstring$qv @196 ; select_stream::getcharstring()
    @select_stream@getobj$qv       @197 ; select_stream::getobj()
    @select_stream@getset$qv       @198 ; select_stream::getset()
    @select_stream@$bctr$qv        @199 ; select_stream::select_stream()
    @select_stream@$bctr$qp12query_streampct2l @200 ; select_stream::select_stream(query_stream*,char*,char*,long)
    @select_stream@$bctr$qp12query_streampct2f @201 ; select_stream::select_stream(query_stream*,char*,char*,float)
    @select_stream@$bctr$qp12query_streampct2 @202 ; select_stream::select_stream(query_stream*,char*,char*)
    @select_stream@$bctr$qp12query_streampcp6object @203 ; select_stream::select_stream(query_stream*,char*,object*)
    @select_stream@$bctr$qp12query_streampcp10collection @204 ; select_stream::select_stream(query_stream*,char*,collection*)
    @select_stream@get$qv          @205 ; select_stream::get()
    @select_stream@close$qv        @206 ; select_stream::close()
    @select_stream@reset$qv        @207 ; select_stream::reset()
    @type@makenewindex$qpc         @208 ; type::makenewindex(char*)
    @type@populateindex$qpcp7indextp @209 ; type::populateindex(char*,indextp*)
    @type@insertintoallindex$qp6object @210 ; type::insertintoallindex(object*)
    @type@$bctr$qv                 @211 ; type::type()
    @type@$bctr$qpcp8database      @212 ; type::type(char*,database*)
    @type@$bctr$qpcp4typep8database @213 ; type::type(char*,type*,database*)
    @type@delete_type$qv           @214 ; type::delete_type()
    @type@remove_subtype$qp4type   @215 ; type::remove_subtype(type*)
    @type@getsupertype$qv          @216 ; type::getsupertype()
    @type@set_belongsto$qp8database @217 ; type::set_belongsto(database*)
    @type@addsubtype$qp4typep7typestp @218 ; type::addsubtype(type*,typestp*)
    @type@readdsubtype$qp7typestp  @219 ; type::readdsubtype(typestp*)
    @type@extend_extent$qp7typestp @220 ; type::extend_extent(typestp*)
    @type@rebuild_extentlist$qv    @221 ; type::rebuild_extentlist()
    @type@add_property$qipc        @222 ; type::add_property(int,char*)
    @type@add_inheritedproperty$qipc @223 ; type::add_inheritedproperty(int,char*)
    @type@drop_index$qpc           @224 ; type::drop_index(char*)
    @type@display$qr12outputbuffer @225 ; type::display(outputbuffer&)
    @type@displayname$qr12outputbuffer @226 ; type::displayname(outputbuffer&)
    @type@getprops$qv              @227 ; type::getprops()
    @type@get_noninherited_propertynamed$qpc @228 ; type::get_noninherited_propertynamed(char*)
    @type@delete_inherited_props$qpc @229 ; type::delete_inherited_props(char*)
    @type@create_instance$qv       @230 ; type::create_instance()
    @type@displayextent$qr12outputbuffer @231 ; type::displayextent(outputbuffer&)
    @type@build_index$qpc          @232 ; type::build_index(char*)
    @type@getindexnamed$qpc        @233 ; type::getindexnamed(char*)
    @type@getextent$qv             @234 ; type::getextent()
    @type@open$qv                  @235 ; type::open()
    @type@open$qpct1l              @236 ; type::open(char*,char*,long)
    @type@open$qpct1f              @237 ; type::open(char*,char*,float)
    @type@open$qpct1               @238 ; type::open(char*,char*)
    @type@open$qpcp6object         @239 ; type::open(char*,object*)
    @type@open$qpcp10collection    @240 ; type::open(char*,collection*)
    @type@remove_all_references_to$qp6object @241 ; type::remove_all_references_to(object*)
    @type@deleteobject$qp6object   @242 ; type::deleteobject(object*)
    @type@savetypes$qp8ofstream    @243 ; type::savetypes(ofstream*)
    @type@saveobjects$qp8ofstreami @244 ; type::saveobjects(ofstream*,int)
    @type@gettypenamed$qpc         @245 ; type::gettypenamed(char*)
    @type@getdb$qv                 @246 ; type::getdb()
    @type@getname$qv               @247 ; type::getname()
    @type@getallsubtypes$qv        @248 ; type::getallsubtypes()
    @type@getnextsubtype$qv        @249 ; type::getnextsubtype()
    @type@getsubtypes$qv           @250 ; type::getsubtypes()
    @type@getsubtype$qv            @251 ; type::getsubtype()
    @type@getfirstprop$qv          @252 ; type::getfirstprop()
    @type@getnextprop$qv           @253 ; type::getnextprop()
    @type@validate$qpcpv           @254 ; type::validate(char*,void*)
    @validation@validdigit$qc      @255 ; validation::validdigit(char)
    @validation@$bctr$qv           @256 ; validation::validation()
    @validation@$bctr$qp8database  @257 ; validation::validation(database*)
    @validation@$bdtr$qv           @258 ; validation::~validation()
    @validation@validate_integer$qpcrl @259 ; validation::validate_integer(char*,long&)
    @validation@validate_real$qpcrf @260 ; validation::validate_real(char*,float&)
    @validation@validate_name$qpc  @261 ; validation::validate_name(char*)
    @validation@validate_set$qpcp10collection @262 ; validation::validate_set(char*,collection*)
    __DebuggerHookData             @263 
    __GetExceptDLLinfo             @264 
